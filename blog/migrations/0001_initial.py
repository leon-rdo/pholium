# Generated by Django 5.2.6 on 2025-10-04 16:08

import django.db.models.deletion
import parler.fields
import parler.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_image_imagetranslation_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
            ],
            options={
                'verbose_name': 'Series',
                'verbose_name_plural': 'Series',
                'ordering': ['-id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active?')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='blog.category', verbose_name='Parent')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['order', 'id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(max_length=120, verbose_name='Name')),
                ('slug', models.SlugField(max_length=140, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('seo_title', models.CharField(blank=True, max_length=160, verbose_name='SEO Title')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.category')),
            ],
            options={
                'verbose_name': 'Category Translation',
                'db_table': 'blog_category_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=12, verbose_name='Status')),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('unlisted', 'Unlisted'), ('private', 'Private')], default='public', max_length=10, verbose_name='Visibility')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='Publish at')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Allow comments?')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='Pin to top?')),
                ('reading_time', models.PositiveIntegerField(default=0, help_text='Estimated in minutes', verbose_name='Reading time (min)')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Views')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
                'ordering': ['-is_pinned', '-published_at', '-id'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('guest_name', models.CharField(blank=True, max_length=120, verbose_name='Guest name')),
                ('guest_email', models.EmailField(blank=True, max_length=254, verbose_name='Guest email')),
                ('guest_website', models.URLField(blank=True, verbose_name='Guest website')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_approved', models.BooleanField(default=True, verbose_name='Approved?')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP')),
                ('user_agent', models.CharField(blank=True, max_length=300, verbose_name='User Agent')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.comment', verbose_name='Parent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostReaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(choices=[('like', 'Like'), ('love', 'Love'), ('clap', 'Clap'), ('fire', 'Fire'), ('wow', 'Wow')], default='like', max_length=12, verbose_name='Reaction')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='blog.post', verbose_name='Post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_reactions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Post Reaction',
                'verbose_name_plural': 'Post Reactions',
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, verbose_name='Order')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.post')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tag')),
            ],
            options={
                'verbose_name': 'Post Tag',
                'verbose_name_plural': 'Post Tags',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='posts', through='blog.PostTag', to='core.tag'),
        ),
        migrations.CreateModel(
            name='PostTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('slug', models.SlugField(max_length=270, verbose_name='Slug')),
                ('excerpt', models.TextField(blank=True, verbose_name='Excerpt')),
                ('body', models.TextField(verbose_name='Body')),
                ('seo_title', models.CharField(blank=True, max_length=160, verbose_name='SEO Title')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Description')),
                ('canonical_url', models.URLField(blank=True, verbose_name='Canonical URL')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.post')),
            ],
            options={
                'verbose_name': 'Post Translation',
                'db_table': 'blog_post_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='post',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='blog.series', verbose_name='Series'),
        ),
        migrations.CreateModel(
            name='SeriesTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('slug', models.SlugField(max_length=220, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('seo_title', models.CharField(blank=True, max_length=160, verbose_name='SEO Title')),
                ('meta_description', models.CharField(blank=True, max_length=160, verbose_name='Meta Description')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='blog.series')),
            ],
            options={
                'verbose_name': 'Series Translation',
                'db_table': 'blog_series_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['is_active'], name='blog_catego_is_acti_7bfc74_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='categorytranslation',
            unique_together={('language_code', 'master'), ('language_code', 'slug')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', 'created_at'], name='blog_commen_post_id_5fee65_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['is_approved'], name='blog_commen_is_appr_be38d5_idx'),
        ),
        migrations.AddIndex(
            model_name='postreaction',
            index=models.Index(fields=['post', 'reaction'], name='blog_postre_post_id_41e0a6_idx'),
        ),
        migrations.AddConstraint(
            model_name='postreaction',
            constraint=models.UniqueConstraint(fields=('post', 'user', 'reaction'), name='unique_user_post_reaction'),
        ),
        migrations.AddIndex(
            model_name='posttag',
            index=models.Index(fields=['post', 'order'], name='blog_postta_post_id_5da20f_idx'),
        ),
        migrations.AddConstraint(
            model_name='posttag',
            constraint=models.UniqueConstraint(fields=('post', 'tag'), name='unique_post_tag'),
        ),
        migrations.AlterUniqueTogether(
            name='posttranslation',
            unique_together={('language_code', 'master'), ('language_code', 'slug')},
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['status', 'visibility'], name='blog_post_status_039d5f_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['published_at'], name='blog_post_publish_698bc0_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_pinned'], name='blog_post_is_pinn_850f66_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='seriestranslation',
            unique_together={('language_code', 'master'), ('language_code', 'slug')},
        ),
    ]
